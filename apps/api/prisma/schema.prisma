// apps/api/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // vem do apps/api/.env
}

enum Role {
  ADMIN
  ATTENDANT
}

model Tenant {
  id        String    @id @default(cuid())
  name      String
  cnpj      String?   @unique
  isActive  Boolean   @default(true)
  users     User[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]

  @@index([isActive, createdAt])
}

model User {
  id            String    @id @default(cuid())
  tenantId      String
  tenant        Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  email         String
  passwordHash  String
  role          Role      @default(ATTENDANT)
  pinSupervisor String?
  isActive      Boolean   @default(true)
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([tenantId, email])
  @@index([tenantId])
  @@index([isActive, role])
}

model Session {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // multi-tenant por coluna
  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  refreshHash String
  userAgent   String?
  ip          String?
  expiresAt   DateTime
  createdAt   DateTime @default(now())

  @@index([userId])
  @@index([tenantId])
  @@index([expiresAt])
}

model AuditLog {
  id        String   @id @default(cuid())
  tenantId  String
  userId    String?
  action    String
  entity    String
  entityId  String?
  diffJson  String?
  ip        String?
  device    String?
  hmac      String
  createdAt DateTime @default(now())

  @@index([tenantId, createdAt])
  @@index([entity, entityId])
}
